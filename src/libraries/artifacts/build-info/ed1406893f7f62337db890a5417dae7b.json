{
	"id": "ed1406893f7f62337db890a5417dae7b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/libraries/HashLib.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.28;\n\nimport { TokenOp } from \"../interfaces/IBlueprintManager.sol\";\n\nlibrary HashLib {\n\tfunction getTokenId(\n\t\t\taddress blueprint,\n\t\t\tuint256 foreignId\n\t) internal pure returns (uint256 id) {\n\t\tassembly (\"memory-safe\") {\n\t\t\tmstore(0, blueprint)\n\t\t\tmstore(0x20, foreignId)\n\n\t\t\tid := keccak256(12, 52)\n\t\t}\n\t}\n\n\tfunction hashActionResults() internal pure returns (bytes32 res) {\n\t\tassembly (\"memory-safe\") {\n\t\t\tlet ptr := mload(0x40)\n\t\t\tlet initPtr := ptr\n\t\t\treturndatacopy(ptr, 0, 0x80)\n\n\t\t\tfor {let scratch := add(ptr, 0x80)} lt(ptr, scratch) {ptr := add(ptr, 0x20)} {\n\t\t\t\tlet retPtr := mload(ptr)\n\t\t\t\treturndatacopy(scratch, retPtr, 0x20)\n\t\t\t\t// multiply length 64 times because structs use two words\n\t\t\t\tlet byteLen := shl(6, mload(scratch))\n\t\t\t\t// now it points to the data, not length\n\t\t\t\tretPtr := add(retPtr, 0x20)\n\t\t\t\treturndatacopy(scratch, retPtr, byteLen)\n\t\t\t\tmstore(ptr, keccak256(scratch, byteLen))\n\t\t\t}\n\n\t\t\tres := keccak256(initPtr, 0x80)\n\t\t}\n\t}\n}\n"
			},
			"src/interfaces/IBlueprintManager.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.28;\n\nstruct TokenOp {\n\tuint256 tokenId;\n\tuint256 amount;\n}\n\nstruct BlueprintCall {\n\taddress sender;\n\taddress blueprint;\n\tbytes action;\n\tbytes32 checksum;\n}\n\n/// @title BlueprintManager's Interface\n/// @author Czar102\ninterface IBlueprintManager {\n\t/// @notice executes a series of calls to Blueprints\n\t/// @param calls the set of calls to be made\n\t/// @dev must either be the party represented in each of these calls,\n\t///      or an operator of the calls[i].sender\n\tfunction cook(address realizer, BlueprintCall[] calldata calls) external;\n\n\t/// @notice mints single type tokens according to the TokenOp\n\t/// @param to the address to mint to\n\t/// @param tokenId the Blueprint's token id to mint\n\t/// @param amount the token amount to mint\n\t/// @dev keep in mind that burning (inverting this action) is only possible\n\t///       via cook invoked by the user or their operator\n\tfunction mint(address to, uint256 tokenId, uint256 amount) external;\n\n\t/// @notice mints many types of tokens according to the `ops` array\n\t/// @param to the address to mint to\n\t/// @param ops the array of Blueprint's token ids and amounts to mint\n\t/// @dev keep in mind that burning (inverting this action) is only possible\n\t///       via cook invoked by the user or their operator\n\tfunction mint(address to, TokenOp[] calldata ops) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/interfaces/IBlueprintManager.sol": {
				"IBlueprintManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "realizer",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "blueprint",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "action",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "checksum",
											"type": "bytes32"
										}
									],
									"internalType": "struct BlueprintCall[]",
									"name": "calls",
									"type": "tuple[]"
								}
							],
							"name": "cook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenOp[]",
									"name": "ops",
									"type": "tuple[]"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Czar102",
						"kind": "dev",
						"methods": {
							"cook(address,(address,address,bytes,bytes32)[])": {
								"details": "must either be the party represented in each of these calls,      or an operator of the calls[i].sender",
								"params": {
									"calls": "the set of calls to be made"
								}
							},
							"mint(address,(uint256,uint256)[])": {
								"details": "keep in mind that burning (inverting this action) is only possible       via cook invoked by the user or their operator",
								"params": {
									"ops": "the array of Blueprint's token ids and amounts to mint",
									"to": "the address to mint to"
								}
							},
							"mint(address,uint256,uint256)": {
								"details": "keep in mind that burning (inverting this action) is only possible       via cook invoked by the user or their operator",
								"params": {
									"amount": "the token amount to mint",
									"to": "the address to mint to",
									"tokenId": "the Blueprint's token id to mint"
								}
							}
						},
						"title": "BlueprintManager's Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"cook(address,(address,address,bytes,bytes32)[])": "62ba62e5",
							"mint(address,(uint256,uint256)[])": "f3178dd1",
							"mint(address,uint256,uint256)": "156e29f6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"realizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"blueprint\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"action\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"checksum\",\"type\":\"bytes32\"}],\"internalType\":\"struct BlueprintCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"cook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Czar102\",\"kind\":\"dev\",\"methods\":{\"cook(address,(address,address,bytes,bytes32)[])\":{\"details\":\"must either be the party represented in each of these calls,      or an operator of the calls[i].sender\",\"params\":{\"calls\":\"the set of calls to be made\"}},\"mint(address,(uint256,uint256)[])\":{\"details\":\"keep in mind that burning (inverting this action) is only possible       via cook invoked by the user or their operator\",\"params\":{\"ops\":\"the array of Blueprint's token ids and amounts to mint\",\"to\":\"the address to mint to\"}},\"mint(address,uint256,uint256)\":{\"details\":\"keep in mind that burning (inverting this action) is only possible       via cook invoked by the user or their operator\",\"params\":{\"amount\":\"the token amount to mint\",\"to\":\"the address to mint to\",\"tokenId\":\"the Blueprint's token id to mint\"}}},\"title\":\"BlueprintManager's Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cook(address,(address,address,bytes,bytes32)[])\":{\"notice\":\"executes a series of calls to Blueprints\"},\"mint(address,(uint256,uint256)[])\":{\"notice\":\"mints many types of tokens according to the `ops` array\"},\"mint(address,uint256,uint256)\":{\"notice\":\"mints single type tokens according to the TokenOp\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBlueprintManager.sol\":\"IBlueprintManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IBlueprintManager.sol\":{\"keccak256\":\"0x9cccb804b30eff150981e915348933e8a0d001def03bea418146a6fc480a7895\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e0c858008ce5db7c6b6d041842937184534f49d1ea75600f11040922fb23c754\",\"dweb:/ipfs/QmUjFRRjVnvbsLshDkNXZVuUrcrLo2Mu167af2QpbvD5iD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"cook(address,(address,address,bytes,bytes32)[])": {
								"notice": "executes a series of calls to Blueprints"
							},
							"mint(address,(uint256,uint256)[])": {
								"notice": "mints many types of tokens according to the `ops` array"
							},
							"mint(address,uint256,uint256)": {
								"notice": "mints single type tokens according to the TokenOp"
							}
						},
						"version": 1
					}
				}
			},
			"src/libraries/HashLib.sol": {
				"HashLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/HashLib.sol\":128:1018  library HashLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/HashLib.sol\":128:1018  library HashLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b60a4927737214526ad86c758e1759015cf065924729e560e6f4769202ed3ef264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b60a4927737214526ad86c758e1759015cf065924729e560e6f4769202ed3ef264736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 EXP BLOBHASH 0x27 PUSH20 0x7214526AD86C758E1759015CF065924729E560E6 DELEGATECALL PUSH23 0x9202ED3EF264736F6C634300081C003300000000000000 ",
							"sourceMap": "128:890:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b60a4927737214526ad86c758e1759015cf065924729e560e6f4769202ed3ef264736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 EXP BLOBHASH 0x27 PUSH20 0x7214526AD86C758E1759015CF065924729E560E6 DELEGATECALL PUSH23 0x9202ED3EF264736F6C634300081C003300000000000000 ",
							"sourceMap": "128:890:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getTokenId(address,uint256)": "infinite",
								"hashActionResults()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 128,
									"end": 1018,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b60a4927737214526ad86c758e1759015cf065924729e560e6f4769202ed3ef264736f6c634300081c0033",
									".code": [
										{
											"begin": 128,
											"end": 1018,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 128,
											"end": 1018,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 128,
											"end": 1018,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 1018,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 1018,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 1018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 1018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 1018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 1018,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"src/interfaces/IBlueprintManager.sol",
								"src/libraries/HashLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/HashLib.sol\":\"HashLib\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IBlueprintManager.sol\":{\"keccak256\":\"0x9cccb804b30eff150981e915348933e8a0d001def03bea418146a6fc480a7895\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e0c858008ce5db7c6b6d041842937184534f49d1ea75600f11040922fb23c754\",\"dweb:/ipfs/QmUjFRRjVnvbsLshDkNXZVuUrcrLo2Mu167af2QpbvD5iD\"]},\"src/libraries/HashLib.sol\":{\"keccak256\":\"0xda21929efb42771a81db51346fb57fbf5b02e0753f59334e51b4a5313a1f5b16\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://89a613d9f236574c3ce9906e2d406c1347be4a4d821c0362b81f1b222b1953eb\",\"dweb:/ipfs/QmNi5CebeCVYGxKD6fqtb7aeyxRwcea41BsYRF81hbtpQT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/interfaces/IBlueprintManager.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IBlueprintManager.sol",
					"exportedSymbols": {
						"BlueprintCall": [
							15
						],
						"IBlueprintManager": [
							47
						],
						"TokenOp": [
							6
						]
					},
					"id": 48,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"canonicalName": "TokenOp",
							"id": 6,
							"members": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "tokenId",
									"nameLocation": "90:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "82:15:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "82:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "108:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "100:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "100:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "TokenOp",
							"nameLocation": "71:7:0",
							"nodeType": "StructDefinition",
							"scope": 48,
							"src": "64:53:0",
							"visibility": "public"
						},
						{
							"canonicalName": "BlueprintCall",
							"id": 15,
							"members": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "151:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 15,
									"src": "143:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "143:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "blueprint",
									"nameLocation": "168:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 15,
									"src": "160:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "160:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "action",
									"nameLocation": "186:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 15,
									"src": "180:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 11,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "180:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "checksum",
									"nameLocation": "203:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 15,
									"src": "195:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 13,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "195:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "BlueprintCall",
							"nameLocation": "126:13:0",
							"nodeType": "StructDefinition",
							"scope": 48,
							"src": "119:95:0",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBlueprintManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 16,
								"nodeType": "StructuredDocumentation",
								"src": "216:60:0",
								"text": "@title BlueprintManager's Interface\n @author Czar102"
							},
							"fullyImplemented": false,
							"id": 47,
							"linearizedBaseContracts": [
								47
							],
							"name": "IBlueprintManager",
							"nameLocation": "286:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "307:217:0",
										"text": "@notice executes a series of calls to Blueprints\n @param calls the set of calls to be made\n @dev must either be the party represented in each of these calls,\n      or an operator of the calls[i].sender"
									},
									"functionSelector": "62ba62e5",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cook",
									"nameLocation": "535:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "realizer",
												"nameLocation": "548:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "540:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "calls",
												"nameLocation": "583:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "558:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BlueprintCall_$15_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct BlueprintCall[]"
												},
												"typeName": {
													"baseType": {
														"id": 21,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 20,
															"name": "BlueprintCall",
															"nameLocations": [
																"558:13:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 15,
															"src": "558:13:0"
														},
														"referencedDeclaration": 15,
														"src": "558:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BlueprintCall_$15_storage_ptr",
															"typeString": "struct BlueprintCall"
														}
													},
													"id": 22,
													"nodeType": "ArrayTypeName",
													"src": "558:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BlueprintCall_$15_storage_$dyn_storage_ptr",
														"typeString": "struct BlueprintCall[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:50:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:0:0"
									},
									"scope": 47,
									"src": "526:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "602:331:0",
										"text": "@notice mints single type tokens according to the TokenOp\n @param to the address to mint to\n @param tokenId the Blueprint's token id to mint\n @param amount the token amount to mint\n @dev keep in mind that burning (inverting this action) is only possible\n       via cook invoked by the user or their operator"
									},
									"functionSelector": "156e29f6",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "944:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "957:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "949:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "969:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "961:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "986:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "978:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:45:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1002:0:0"
									},
									"scope": 47,
									"src": "935:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1006:311:0",
										"text": "@notice mints many types of tokens according to the `ops` array\n @param to the address to mint to\n @param ops the array of Blueprint's token ids and amounts to mint\n @dev keep in mind that burning (inverting this action) is only possible\n       via cook invoked by the user or their operator"
									},
									"functionSelector": "f3178dd1",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1328:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1341:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1333:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "ops",
												"nameLocation": "1364:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1345:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOp_$6_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct TokenOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 41,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 40,
															"name": "TokenOp",
															"nameLocations": [
																"1345:7:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 6,
															"src": "1345:7:0"
														},
														"referencedDeclaration": 6,
														"src": "1345:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOp_$6_storage_ptr",
															"typeString": "struct TokenOp"
														}
													},
													"id": 42,
													"nodeType": "ArrayTypeName",
													"src": "1345:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOp_$6_storage_$dyn_storage_ptr",
														"typeString": "struct TokenOp[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:36:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:0:0"
									},
									"scope": 47,
									"src": "1319:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 48,
							"src": "276:1104:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1342:0"
				},
				"id": 0
			},
			"src/libraries/HashLib.sol": {
				"ast": {
					"absolutePath": "src/libraries/HashLib.sol",
					"exportedSymbols": {
						"HashLib": [
							70
						],
						"TokenOp": [
							6
						]
					},
					"id": 71,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 49,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "src/interfaces/IBlueprintManager.sol",
							"file": "../interfaces/IBlueprintManager.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 71,
							"sourceUnit": 48,
							"src": "64:62:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "TokenOp",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 6,
										"src": "73:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "HashLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "HashLib",
							"nameLocation": "136:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "249:116:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "278:84:1",
													"nodeType": "YulBlock",
													"src": "278:84:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "290:1:1",
																		"nodeType": "YulLiteral",
																		"src": "290:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "blueprint",
																		"nativeSrc": "293:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "293:9:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																},
																"nativeSrc": "283:20:1",
																"nodeType": "YulFunctionCall",
																"src": "283:20:1"
															},
															"nativeSrc": "283:20:1",
															"nodeType": "YulExpressionStatement",
															"src": "283:20:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "314:4:1",
																		"nodeType": "YulLiteral",
																		"src": "314:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "foreignId",
																		"nativeSrc": "320:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "320:9:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "307:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "307:6:1"
																},
																"nativeSrc": "307:23:1",
																"nodeType": "YulFunctionCall",
																"src": "307:23:1"
															},
															"nativeSrc": "307:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "307:23:1"
														},
														{
															"nativeSrc": "335:23:1",
															"nodeType": "YulAssignment",
															"src": "335:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "351:2:1",
																		"nodeType": "YulLiteral",
																		"src": "351:2:1",
																		"type": "",
																		"value": "12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "355:2:1",
																		"nodeType": "YulLiteral",
																		"src": "355:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "341:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "341:9:1"
																},
																"nativeSrc": "341:17:1",
																"nodeType": "YulFunctionCall",
																"src": "341:17:1"
															},
															"variableNames": [
																{
																	"name": "id",
																	"nativeSrc": "335:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "335:2:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 53,
														"isOffset": false,
														"isSlot": false,
														"src": "293:9:1",
														"valueSize": 1
													},
													{
														"declaration": 55,
														"isOffset": false,
														"isSlot": false,
														"src": "320:9:1",
														"valueSize": 1
													},
													{
														"declaration": 58,
														"isOffset": false,
														"isSlot": false,
														"src": "335:2:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 60,
												"nodeType": "InlineAssembly",
												"src": "253:109:1"
											}
										]
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenId",
									"nameLocation": "156:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "blueprint",
												"nameLocation": "179:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "171:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "foreignId",
												"nameLocation": "201:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "193:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:47:1"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "245:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "237:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:12:1"
									},
									"scope": 70,
									"src": "147:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "433:583:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "462:551:1",
													"nodeType": "YulBlock",
													"src": "462:551:1",
													"statements": [
														{
															"nativeSrc": "467:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "467:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "484:4:1",
																		"nodeType": "YulLiteral",
																		"src": "484:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "478:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "478:5:1"
																},
																"nativeSrc": "478:11:1",
																"nodeType": "YulFunctionCall",
																"src": "478:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "471:3:1",
																	"nodeType": "YulTypedName",
																	"src": "471:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "493:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "493:18:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "508:3:1",
																"nodeType": "YulIdentifier",
																"src": "508:3:1"
															},
															"variables": [
																{
																	"name": "initPtr",
																	"nativeSrc": "497:7:1",
																	"nodeType": "YulTypedName",
																	"src": "497:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "530:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "530:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "535:1:1",
																		"nodeType": "YulLiteral",
																		"src": "535:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "538:4:1",
																		"nodeType": "YulLiteral",
																		"src": "538:4:1",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "515:14:1",
																	"nodeType": "YulIdentifier",
																	"src": "515:14:1"
																},
																"nativeSrc": "515:28:1",
																"nodeType": "YulFunctionCall",
																"src": "515:28:1"
															},
															"nativeSrc": "515:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "515:28:1"
														},
														{
															"body": {
																"nativeSrc": "625:348:1",
																"nodeType": "YulBlock",
																"src": "625:348:1",
																"statements": [
																	{
																		"nativeSrc": "631:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "631:24:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "651:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "651:3:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "645:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "645:5:1"
																			},
																			"nativeSrc": "645:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "645:10:1"
																		},
																		"variables": [
																			{
																				"name": "retPtr",
																				"nativeSrc": "635:6:1",
																				"nodeType": "YulTypedName",
																				"src": "635:6:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "scratch",
																					"nativeSrc": "675:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "675:7:1"
																				},
																				{
																					"name": "retPtr",
																					"nativeSrc": "684:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "684:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "692:4:1",
																					"nodeType": "YulLiteral",
																					"src": "692:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "660:14:1",
																				"nodeType": "YulIdentifier",
																				"src": "660:14:1"
																			},
																			"nativeSrc": "660:37:1",
																			"nodeType": "YulFunctionCall",
																			"src": "660:37:1"
																		},
																		"nativeSrc": "660:37:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "660:37:1"
																	},
																	{
																		"nativeSrc": "764:37:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "764:37:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "783:1:1",
																					"nodeType": "YulLiteral",
																					"src": "783:1:1",
																					"type": "",
																					"value": "6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "scratch",
																							"nativeSrc": "792:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "792:7:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "786:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "786:5:1"
																					},
																					"nativeSrc": "786:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "786:14:1"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "779:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "779:3:1"
																			},
																			"nativeSrc": "779:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "779:22:1"
																		},
																		"variables": [
																			{
																				"name": "byteLen",
																				"nativeSrc": "768:7:1",
																				"nodeType": "YulTypedName",
																				"src": "768:7:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "851:27:1",
																		"nodeType": "YulAssignment",
																		"src": "851:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "retPtr",
																					"nativeSrc": "865:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "865:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "873:4:1",
																					"nodeType": "YulLiteral",
																					"src": "873:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "861:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "861:3:1"
																			},
																			"nativeSrc": "861:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "861:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "retPtr",
																				"nativeSrc": "851:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "851:6:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "scratch",
																					"nativeSrc": "898:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "898:7:1"
																				},
																				{
																					"name": "retPtr",
																					"nativeSrc": "907:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "907:6:1"
																				},
																				{
																					"name": "byteLen",
																					"nativeSrc": "915:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "915:7:1"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "883:14:1",
																				"nodeType": "YulIdentifier",
																				"src": "883:14:1"
																			},
																			"nativeSrc": "883:40:1",
																			"nodeType": "YulFunctionCall",
																			"src": "883:40:1"
																		},
																		"nativeSrc": "883:40:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "883:40:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "935:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "935:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "scratch",
																							"nativeSrc": "950:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "950:7:1"
																						},
																						{
																							"name": "byteLen",
																							"nativeSrc": "959:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "959:7:1"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nativeSrc": "940:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "940:9:1"
																					},
																					"nativeSrc": "940:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "940:27:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "928:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:6:1"
																			},
																			"nativeSrc": "928:40:1",
																			"nodeType": "YulFunctionCall",
																			"src": "928:40:1"
																		},
																		"nativeSrc": "928:40:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "928:40:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "587:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "587:3:1"
																	},
																	{
																		"name": "scratch",
																		"nativeSrc": "592:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "592:7:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "584:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:1"
																},
																"nativeSrc": "584:16:1",
																"nodeType": "YulFunctionCall",
																"src": "584:16:1"
															},
															"nativeSrc": "548:425:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "601:23:1",
																"nodeType": "YulBlock",
																"src": "601:23:1",
																"statements": [
																	{
																		"nativeSrc": "602:21:1",
																		"nodeType": "YulAssignment",
																		"src": "602:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "613:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "613:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "618:4:1",
																					"nodeType": "YulLiteral",
																					"src": "618:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "609:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "609:3:1"
																			},
																			"nativeSrc": "609:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "609:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nativeSrc": "602:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "602:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "552:31:1",
																"nodeType": "YulBlock",
																"src": "552:31:1",
																"statements": [
																	{
																		"nativeSrc": "553:29:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "553:29:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "572:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "572:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "577:4:1",
																					"nodeType": "YulLiteral",
																					"src": "577:4:1",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "568:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "568:3:1"
																			},
																			"nativeSrc": "568:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "568:14:1"
																		},
																		"variables": [
																			{
																				"name": "scratch",
																				"nativeSrc": "557:7:1",
																				"nodeType": "YulTypedName",
																				"src": "557:7:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "548:425:1"
														},
														{
															"nativeSrc": "978:31:1",
															"nodeType": "YulAssignment",
															"src": "978:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "initPtr",
																		"nativeSrc": "995:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "995:7:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1004:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1004:4:1",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "985:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "985:9:1"
																},
																"nativeSrc": "985:24:1",
																"nodeType": "YulFunctionCall",
																"src": "985:24:1"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "978:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "978:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 65,
														"isOffset": false,
														"isSlot": false,
														"src": "978:3:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 67,
												"nodeType": "InlineAssembly",
												"src": "437:576:1"
											}
										]
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashActionResults",
									"nameLocation": "377:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:2:1"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "428:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "420:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:13:1"
									},
									"scope": 70,
									"src": "368:648:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 71,
							"src": "128:890:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:980:1"
				},
				"id": 1
			}
		}
	}
}