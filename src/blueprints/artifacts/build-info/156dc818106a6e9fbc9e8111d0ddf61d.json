{
	"id": "156dc818106a6e9fbc9e8111d0ddf61d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/blueprints/BasicBlueprint.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.28;\n\nimport {TokenOp, IBlueprint} from \"../interfaces/IBlueprint.sol\";\nimport {IBlueprintManager} from \"../interfaces/IBlueprintManager.sol\";\n\nabstract contract BasicBlueprint is IBlueprint {\n\tIBlueprintManager immutable public blueprintManager;\n\n\terror AccessDenied();\n\n\tconstructor(IBlueprintManager _blueprintManager) {\n\t\tblueprintManager = _blueprintManager;\n\t}\n\n\tmodifier onlyManager() {\n\t\tif (msg.sender != address(blueprintManager))\n\t\t\trevert AccessDenied();\n\n\t\t_;\n\t}\n\n\tfunction zero() internal pure returns (TokenOp[] memory z) {\n\t\tassembly (\"memory-safe\") {\n\t\t\tz := 0x60\n\t\t}\n\t}\n\n\tfunction oneOperationArray(\n\t\tuint256 tokenId,\n\t\tuint256 amount\n\t) internal pure returns (TokenOp[] memory res) {\n\t\tassembly (\"memory-safe\") {\n\t\t\tres := mload(0x40)\n\t\t\tmstore(0x40, add(res, 0x80))\n\n\t\t\tlet structPtr := add(res, 0x40)\n\n\t\t\tmstore(res, 1)\n\t\t\tmstore(add(res, 0x20), structPtr)\n\t\t\tmstore(structPtr, tokenId)\n\t\t\tmstore(add(res, 0x60), amount)\n\t\t}\n\t}\n}\n"
			},
			"src/interfaces/IBlueprintManager.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.28;\n\nstruct TokenOp {\n\tuint256 tokenId;\n\tuint256 amount;\n}\n\nstruct BlueprintCall {\n\taddress sender;\n\taddress blueprint;\n\tbytes action;\n\tbytes32 checksum;\n}\n\n/// @title BlueprintManager's Interface\n/// @author Czar102\ninterface IBlueprintManager {\n\t/// @notice executes a series of calls to Blueprints\n\t/// @param calls the set of calls to be made\n\t/// @dev must either be the party represented in each of these calls,\n\t///      or an operator of the calls[i].sender\n\tfunction cook(address realizer, BlueprintCall[] calldata calls) external;\n\n\t/// @notice mints single type tokens according to the TokenOp\n\t/// @param to the address to mint to\n\t/// @param tokenId the Blueprint's token id to mint\n\t/// @param amount the token amount to mint\n\t/// @dev keep in mind that burning (inverting this action) is only possible\n\t///       via cook invoked by the user or their operator\n\tfunction mint(address to, uint256 tokenId, uint256 amount) external;\n\n\t/// @notice mints many types of tokens according to the `ops` array\n\t/// @param to the address to mint to\n\t/// @param ops the array of Blueprint's token ids and amounts to mint\n\t/// @dev keep in mind that burning (inverting this action) is only possible\n\t///       via cook invoked by the user or their operator\n\tfunction mint(address to, TokenOp[] calldata ops) external;\n}\n"
			},
			"src/interfaces/IBlueprint.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.28;\n\nimport {TokenOp} from \"./IBlueprintManager.sol\";\n\n/**\n * @title Blueprint's Interface\n * @author Czar102\n */\ninterface IBlueprint {\n\t/// @notice executes an action in Blueprint\n\t/// @param action a description of the action being taken\n\tfunction executeAction(bytes calldata action) external returns (\n\t\tTokenOp[] memory mint,\n\t\tTokenOp[] memory burn,\n\t\tTokenOp[] memory give,\n\t\tTokenOp[] memory take\n\t);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/blueprints/BasicBlueprint.sol": {
				"BasicBlueprint": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessDenied",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "blueprintManager",
							"outputs": [
								{
									"internalType": "contract IBlueprintManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "action",
									"type": "bytes"
								}
							],
							"name": "executeAction",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenOp[]",
									"name": "mint",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenOp[]",
									"name": "burn",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenOp[]",
									"name": "give",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenOp[]",
									"name": "take",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"executeAction(bytes)": {
								"params": {
									"action": "a description of the action being taken"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"blueprintManager()": "fabe109a",
							"executeAction(bytes)": "a129568d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"blueprintManager\",\"outputs\":[{\"internalType\":\"contract IBlueprintManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"action\",\"type\":\"bytes\"}],\"name\":\"executeAction\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenOp[]\",\"name\":\"mint\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenOp[]\",\"name\":\"burn\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenOp[]\",\"name\":\"give\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenOp[]\",\"name\":\"take\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeAction(bytes)\":{\"params\":{\"action\":\"a description of the action being taken\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeAction(bytes)\":{\"notice\":\"executes an action in Blueprint\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/blueprints/BasicBlueprint.sol\":\"BasicBlueprint\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/blueprints/BasicBlueprint.sol\":{\"keccak256\":\"0xcfd93fde1f9611cd1cbe4621d78e73ce1f037784e8ba0bca340213d4b75455ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a6c2507efc773918848a465e6ebef16d4ef9ab2e4a61eb5bfdea06e7267a40ac\",\"dweb:/ipfs/QmS8WEURQs5RURzYcA6dhRF675NAtDHL6vhjbsb55we1ek\"]},\"src/interfaces/IBlueprint.sol\":{\"keccak256\":\"0x402af28fa9618652cbf3ccba43fa3f105f6507afb56f5693a94a20ff8ee3dd09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c9aa4a8c9f694b980b2bbe595ef3c5482ce7e85aff33c465017d8a94b17c6b31\",\"dweb:/ipfs/QmVTdABvwkaufoUDy6nw7bskA1rH4rRgmx7WWEQFUC2t2T\"]},\"src/interfaces/IBlueprintManager.sol\":{\"keccak256\":\"0x9cccb804b30eff150981e915348933e8a0d001def03bea418146a6fc480a7895\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e0c858008ce5db7c6b6d041842937184534f49d1ea75600f11040922fb23c754\",\"dweb:/ipfs/QmUjFRRjVnvbsLshDkNXZVuUrcrLo2Mu167af2QpbvD5iD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"executeAction(bytes)": {
								"notice": "executes an action in Blueprint"
							}
						},
						"version": 1
					}
				}
			},
			"src/interfaces/IBlueprint.sol": {
				"IBlueprint": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "action",
									"type": "bytes"
								}
							],
							"name": "executeAction",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenOp[]",
									"name": "mint",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenOp[]",
									"name": "burn",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenOp[]",
									"name": "give",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenOp[]",
									"name": "take",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Czar102",
						"kind": "dev",
						"methods": {
							"executeAction(bytes)": {
								"params": {
									"action": "a description of the action being taken"
								}
							}
						},
						"title": "Blueprint's Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeAction(bytes)": "a129568d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"action\",\"type\":\"bytes\"}],\"name\":\"executeAction\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenOp[]\",\"name\":\"mint\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenOp[]\",\"name\":\"burn\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenOp[]\",\"name\":\"give\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenOp[]\",\"name\":\"take\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Czar102\",\"kind\":\"dev\",\"methods\":{\"executeAction(bytes)\":{\"params\":{\"action\":\"a description of the action being taken\"}}},\"title\":\"Blueprint's Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeAction(bytes)\":{\"notice\":\"executes an action in Blueprint\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBlueprint.sol\":\"IBlueprint\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IBlueprint.sol\":{\"keccak256\":\"0x402af28fa9618652cbf3ccba43fa3f105f6507afb56f5693a94a20ff8ee3dd09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c9aa4a8c9f694b980b2bbe595ef3c5482ce7e85aff33c465017d8a94b17c6b31\",\"dweb:/ipfs/QmVTdABvwkaufoUDy6nw7bskA1rH4rRgmx7WWEQFUC2t2T\"]},\"src/interfaces/IBlueprintManager.sol\":{\"keccak256\":\"0x9cccb804b30eff150981e915348933e8a0d001def03bea418146a6fc480a7895\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e0c858008ce5db7c6b6d041842937184534f49d1ea75600f11040922fb23c754\",\"dweb:/ipfs/QmUjFRRjVnvbsLshDkNXZVuUrcrLo2Mu167af2QpbvD5iD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"executeAction(bytes)": {
								"notice": "executes an action in Blueprint"
							}
						},
						"version": 1
					}
				}
			},
			"src/interfaces/IBlueprintManager.sol": {
				"IBlueprintManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "realizer",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "blueprint",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "action",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "checksum",
											"type": "bytes32"
										}
									],
									"internalType": "struct BlueprintCall[]",
									"name": "calls",
									"type": "tuple[]"
								}
							],
							"name": "cook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenOp[]",
									"name": "ops",
									"type": "tuple[]"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Czar102",
						"kind": "dev",
						"methods": {
							"cook(address,(address,address,bytes,bytes32)[])": {
								"details": "must either be the party represented in each of these calls,      or an operator of the calls[i].sender",
								"params": {
									"calls": "the set of calls to be made"
								}
							},
							"mint(address,(uint256,uint256)[])": {
								"details": "keep in mind that burning (inverting this action) is only possible       via cook invoked by the user or their operator",
								"params": {
									"ops": "the array of Blueprint's token ids and amounts to mint",
									"to": "the address to mint to"
								}
							},
							"mint(address,uint256,uint256)": {
								"details": "keep in mind that burning (inverting this action) is only possible       via cook invoked by the user or their operator",
								"params": {
									"amount": "the token amount to mint",
									"to": "the address to mint to",
									"tokenId": "the Blueprint's token id to mint"
								}
							}
						},
						"title": "BlueprintManager's Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"cook(address,(address,address,bytes,bytes32)[])": "62ba62e5",
							"mint(address,(uint256,uint256)[])": "f3178dd1",
							"mint(address,uint256,uint256)": "156e29f6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"realizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"blueprint\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"action\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"checksum\",\"type\":\"bytes32\"}],\"internalType\":\"struct BlueprintCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"cook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Czar102\",\"kind\":\"dev\",\"methods\":{\"cook(address,(address,address,bytes,bytes32)[])\":{\"details\":\"must either be the party represented in each of these calls,      or an operator of the calls[i].sender\",\"params\":{\"calls\":\"the set of calls to be made\"}},\"mint(address,(uint256,uint256)[])\":{\"details\":\"keep in mind that burning (inverting this action) is only possible       via cook invoked by the user or their operator\",\"params\":{\"ops\":\"the array of Blueprint's token ids and amounts to mint\",\"to\":\"the address to mint to\"}},\"mint(address,uint256,uint256)\":{\"details\":\"keep in mind that burning (inverting this action) is only possible       via cook invoked by the user or their operator\",\"params\":{\"amount\":\"the token amount to mint\",\"to\":\"the address to mint to\",\"tokenId\":\"the Blueprint's token id to mint\"}}},\"title\":\"BlueprintManager's Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cook(address,(address,address,bytes,bytes32)[])\":{\"notice\":\"executes a series of calls to Blueprints\"},\"mint(address,(uint256,uint256)[])\":{\"notice\":\"mints many types of tokens according to the `ops` array\"},\"mint(address,uint256,uint256)\":{\"notice\":\"mints single type tokens according to the TokenOp\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBlueprintManager.sol\":\"IBlueprintManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IBlueprintManager.sol\":{\"keccak256\":\"0x9cccb804b30eff150981e915348933e8a0d001def03bea418146a6fc480a7895\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e0c858008ce5db7c6b6d041842937184534f49d1ea75600f11040922fb23c754\",\"dweb:/ipfs/QmUjFRRjVnvbsLshDkNXZVuUrcrLo2Mu167af2QpbvD5iD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"cook(address,(address,address,bytes,bytes32)[])": {
								"notice": "executes a series of calls to Blueprints"
							},
							"mint(address,(uint256,uint256)[])": {
								"notice": "mints many types of tokens according to the `ops` array"
							},
							"mint(address,uint256,uint256)": {
								"notice": "mints single type tokens according to the TokenOp"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/blueprints/BasicBlueprint.sol": {
				"ast": {
					"absolutePath": "src/blueprints/BasicBlueprint.sol",
					"exportedSymbols": {
						"BasicBlueprint": [
							62
						],
						"IBlueprint": [
							90
						],
						"IBlueprintManager": [
							138
						],
						"TokenOp": [
							97
						]
					},
					"id": 63,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"absolutePath": "src/interfaces/IBlueprint.sol",
							"file": "../interfaces/IBlueprint.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 63,
							"sourceUnit": 91,
							"src": "64:65:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "TokenOp",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 97,
										"src": "72:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 3,
										"name": "IBlueprint",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 90,
										"src": "81:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IBlueprintManager.sol",
							"file": "../interfaces/IBlueprintManager.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 63,
							"sourceUnit": 139,
							"src": "130:70:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 5,
										"name": "IBlueprintManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 138,
										"src": "138:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IBlueprint",
										"nameLocations": [
											"238:10:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 90,
										"src": "238:10:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "238:10:0"
								}
							],
							"canonicalName": "BasicBlueprint",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 62,
							"linearizedBaseContracts": [
								62,
								90
							],
							"name": "BasicBlueprint",
							"nameLocation": "220:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fabe109a",
									"id": 11,
									"mutability": "immutable",
									"name": "blueprintManager",
									"nameLocation": "287:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 62,
									"src": "252:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBlueprintManager_$138",
										"typeString": "contract IBlueprintManager"
									},
									"typeName": {
										"id": 10,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 9,
											"name": "IBlueprintManager",
											"nameLocations": [
												"252:17:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 138,
											"src": "252:17:0"
										},
										"referencedDeclaration": 138,
										"src": "252:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBlueprintManager_$138",
											"typeString": "contract IBlueprintManager"
										}
									},
									"visibility": "public"
								},
								{
									"errorSelector": "4ca88867",
									"id": 13,
									"name": "AccessDenied",
									"nameLocation": "313:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:0"
									},
									"src": "307:21:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "380:44:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 19,
														"name": "blueprintManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "384:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBlueprintManager_$138",
															"typeString": "contract IBlueprintManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 20,
														"name": "_blueprintManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "403:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBlueprintManager_$138",
															"typeString": "contract IBlueprintManager"
														}
													},
													"src": "384:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBlueprintManager_$138",
														"typeString": "contract IBlueprintManager"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "384:36:0"
											}
										]
									},
									"id": 24,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_blueprintManager",
												"nameLocation": "361:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "343:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBlueprintManager_$138",
													"typeString": "contract IBlueprintManager"
												},
												"typeName": {
													"id": 15,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 14,
														"name": "IBlueprintManager",
														"nameLocations": [
															"343:17:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 138,
														"src": "343:17:0"
													},
													"referencedDeclaration": 138,
													"src": "343:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBlueprintManager_$138",
														"typeString": "contract IBlueprintManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:37:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:0"
									},
									"scope": 62,
									"src": "331:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "450:83:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "458:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "462:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "458:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 30,
																"name": "blueprintManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "480:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBlueprintManager_$138",
																	"typeString": "contract IBlueprintManager"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IBlueprintManager_$138",
																	"typeString": "contract IBlueprintManager"
																}
															],
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "472:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 28,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "472:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "472:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "458:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 36,
												"nodeType": "IfStatement",
												"src": "454:69:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 33,
															"name": "AccessDenied",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "509:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "509:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 35,
													"nodeType": "RevertStatement",
													"src": "502:21:0"
												}
											},
											{
												"id": 37,
												"nodeType": "PlaceholderStatement",
												"src": "528:1:0"
											}
										]
									},
									"id": 39,
									"name": "onlyManager",
									"nameLocation": "436:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"src": "427:106:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "595:50:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "624:18:0",
													"nodeType": "YulBlock",
													"src": "624:18:0",
													"statements": [
														{
															"nativeSrc": "629:9:0",
															"nodeType": "YulAssignment",
															"src": "629:9:0",
															"value": {
																"kind": "number",
																"nativeSrc": "634:4:0",
																"nodeType": "YulLiteral",
																"src": "634:4:0",
																"type": "",
																"value": "0x60"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "629:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "629:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "629:1:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 46,
												"nodeType": "InlineAssembly",
												"src": "599:43:0"
											}
										]
									},
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "zero",
									"nameLocation": "545:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "592:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "575:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct TokenOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 42,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 41,
															"name": "TokenOp",
															"nameLocations": [
																"575:7:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 97,
															"src": "575:7:0"
														},
														"referencedDeclaration": 97,
														"src": "575:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOp_$97_storage_ptr",
															"typeString": "struct TokenOp"
														}
													},
													"id": 43,
													"nodeType": "ArrayTypeName",
													"src": "575:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_storage_$dyn_storage_ptr",
														"typeString": "struct TokenOp[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:20:0"
									},
									"scope": 62,
									"src": "536:109:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "760:247:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "789:215:0",
													"nodeType": "YulBlock",
													"src": "789:215:0",
													"statements": [
														{
															"nativeSrc": "794:18:0",
															"nodeType": "YulAssignment",
															"src": "794:18:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "807:4:0",
																		"nodeType": "YulLiteral",
																		"src": "807:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "801:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "801:5:0"
																},
																"nativeSrc": "801:11:0",
																"nodeType": "YulFunctionCall",
																"src": "801:11:0"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "794:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "794:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "823:4:0",
																		"nodeType": "YulLiteral",
																		"src": "823:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "res",
																				"nativeSrc": "833:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "833:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "838:4:0",
																				"nodeType": "YulLiteral",
																				"src": "838:4:0",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "829:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "829:3:0"
																		},
																		"nativeSrc": "829:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "829:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "816:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:0"
																},
																"nativeSrc": "816:28:0",
																"nodeType": "YulFunctionCall",
																"src": "816:28:0"
															},
															"nativeSrc": "816:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "816:28:0"
														},
														{
															"nativeSrc": "849:31:0",
															"nodeType": "YulVariableDeclaration",
															"src": "849:31:0",
															"value": {
																"arguments": [
																	{
																		"name": "res",
																		"nativeSrc": "870:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "870:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "875:4:0",
																		"nodeType": "YulLiteral",
																		"src": "875:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "866:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "866:3:0"
																},
																"nativeSrc": "866:14:0",
																"nodeType": "YulFunctionCall",
																"src": "866:14:0"
															},
															"variables": [
																{
																	"name": "structPtr",
																	"nativeSrc": "853:9:0",
																	"nodeType": "YulTypedName",
																	"src": "853:9:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "res",
																		"nativeSrc": "892:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "892:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "897:1:0",
																		"nodeType": "YulLiteral",
																		"src": "897:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "885:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:0"
																},
																"nativeSrc": "885:14:0",
																"nodeType": "YulFunctionCall",
																"src": "885:14:0"
															},
															"nativeSrc": "885:14:0",
															"nodeType": "YulExpressionStatement",
															"src": "885:14:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "res",
																				"nativeSrc": "914:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "914:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "919:4:0",
																				"nodeType": "YulLiteral",
																				"src": "919:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "910:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:0"
																		},
																		"nativeSrc": "910:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "910:14:0"
																	},
																	{
																		"name": "structPtr",
																		"nativeSrc": "926:9:0",
																		"nodeType": "YulIdentifier",
																		"src": "926:9:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "903:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:0"
																},
																"nativeSrc": "903:33:0",
																"nodeType": "YulFunctionCall",
																"src": "903:33:0"
															},
															"nativeSrc": "903:33:0",
															"nodeType": "YulExpressionStatement",
															"src": "903:33:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "structPtr",
																		"nativeSrc": "947:9:0",
																		"nodeType": "YulIdentifier",
																		"src": "947:9:0"
																	},
																	{
																		"name": "tokenId",
																		"nativeSrc": "958:7:0",
																		"nodeType": "YulIdentifier",
																		"src": "958:7:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "940:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:0"
																},
																"nativeSrc": "940:26:0",
																"nodeType": "YulFunctionCall",
																"src": "940:26:0"
															},
															"nativeSrc": "940:26:0",
															"nodeType": "YulExpressionStatement",
															"src": "940:26:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "res",
																				"nativeSrc": "981:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "981:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "986:4:0",
																				"nodeType": "YulLiteral",
																				"src": "986:4:0",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "977:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "977:3:0"
																		},
																		"nativeSrc": "977:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "977:14:0"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "993:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "993:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "970:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:0"
																},
																"nativeSrc": "970:30:0",
																"nodeType": "YulFunctionCall",
																"src": "970:30:0"
															},
															"nativeSrc": "970:30:0",
															"nodeType": "YulExpressionStatement",
															"src": "970:30:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 52,
														"isOffset": false,
														"isSlot": false,
														"src": "993:6:0",
														"valueSize": 1
													},
													{
														"declaration": 57,
														"isOffset": false,
														"isSlot": false,
														"src": "794:3:0",
														"valueSize": 1
													},
													{
														"declaration": 57,
														"isOffset": false,
														"isSlot": false,
														"src": "833:3:0",
														"valueSize": 1
													},
													{
														"declaration": 57,
														"isOffset": false,
														"isSlot": false,
														"src": "870:3:0",
														"valueSize": 1
													},
													{
														"declaration": 57,
														"isOffset": false,
														"isSlot": false,
														"src": "892:3:0",
														"valueSize": 1
													},
													{
														"declaration": 57,
														"isOffset": false,
														"isSlot": false,
														"src": "914:3:0",
														"valueSize": 1
													},
													{
														"declaration": 57,
														"isOffset": false,
														"isSlot": false,
														"src": "981:3:0",
														"valueSize": 1
													},
													{
														"declaration": 50,
														"isOffset": false,
														"isSlot": false,
														"src": "958:7:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 59,
												"nodeType": "InlineAssembly",
												"src": "764:240:0"
											}
										]
									},
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "oneOperationArray",
									"nameLocation": "657:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "686:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "678:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "705:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "697:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:40:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "755:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "738:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct TokenOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 55,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 54,
															"name": "TokenOp",
															"nameLocations": [
																"738:7:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 97,
															"src": "738:7:0"
														},
														"referencedDeclaration": 97,
														"src": "738:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOp_$97_storage_ptr",
															"typeString": "struct TokenOp"
														}
													},
													"id": 56,
													"nodeType": "ArrayTypeName",
													"src": "738:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_storage_$dyn_storage_ptr",
														"typeString": "struct TokenOp[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:22:0"
									},
									"scope": 62,
									"src": "648:359:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 63,
							"src": "202:807:0",
							"usedErrors": [
								13
							],
							"usedEvents": []
						}
					],
					"src": "39:971:0"
				},
				"id": 0
			},
			"src/interfaces/IBlueprint.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IBlueprint.sol",
					"exportedSymbols": {
						"IBlueprint": [
							90
						],
						"TokenOp": [
							97
						]
					},
					"id": 91,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 64,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "src/interfaces/IBlueprintManager.sol",
							"file": "./IBlueprintManager.sol",
							"id": 66,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 91,
							"sourceUnit": 139,
							"src": "64:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 65,
										"name": "TokenOp",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 97,
										"src": "72:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBlueprint",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "114:58:1",
								"text": " @title Blueprint's Interface\n @author Czar102"
							},
							"fullyImplemented": false,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "IBlueprint",
							"nameLocation": "183:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "197:102:1",
										"text": "@notice executes an action in Blueprint\n @param action a description of the action being taken"
									},
									"functionSelector": "a129568d",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeAction",
									"nameLocation": "310:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "action",
												"nameLocation": "339:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "324:21:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 69,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "324:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:23:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "mint",
												"nameLocation": "385:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "368:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct TokenOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 73,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 72,
															"name": "TokenOp",
															"nameLocations": [
																"368:7:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 97,
															"src": "368:7:1"
														},
														"referencedDeclaration": 97,
														"src": "368:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOp_$97_storage_ptr",
															"typeString": "struct TokenOp"
														}
													},
													"id": 74,
													"nodeType": "ArrayTypeName",
													"src": "368:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_storage_$dyn_storage_ptr",
														"typeString": "struct TokenOp[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "burn",
												"nameLocation": "410:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "393:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct TokenOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 77,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 76,
															"name": "TokenOp",
															"nameLocations": [
																"393:7:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 97,
															"src": "393:7:1"
														},
														"referencedDeclaration": 97,
														"src": "393:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOp_$97_storage_ptr",
															"typeString": "struct TokenOp"
														}
													},
													"id": 78,
													"nodeType": "ArrayTypeName",
													"src": "393:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_storage_$dyn_storage_ptr",
														"typeString": "struct TokenOp[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "give",
												"nameLocation": "435:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "418:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct TokenOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 81,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 80,
															"name": "TokenOp",
															"nameLocations": [
																"418:7:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 97,
															"src": "418:7:1"
														},
														"referencedDeclaration": 97,
														"src": "418:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOp_$97_storage_ptr",
															"typeString": "struct TokenOp"
														}
													},
													"id": 82,
													"nodeType": "ArrayTypeName",
													"src": "418:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_storage_$dyn_storage_ptr",
														"typeString": "struct TokenOp[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "take",
												"nameLocation": "460:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "443:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct TokenOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 85,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 84,
															"name": "TokenOp",
															"nameLocations": [
																"443:7:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 97,
															"src": "443:7:1"
														},
														"referencedDeclaration": 97,
														"src": "443:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOp_$97_storage_ptr",
															"typeString": "struct TokenOp"
														}
													},
													"id": 86,
													"nodeType": "ArrayTypeName",
													"src": "443:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_storage_$dyn_storage_ptr",
														"typeString": "struct TokenOp[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:103:1"
									},
									"scope": 90,
									"src": "301:167:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 91,
							"src": "173:297:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:432:1"
				},
				"id": 1
			},
			"src/interfaces/IBlueprintManager.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IBlueprintManager.sol",
					"exportedSymbols": {
						"BlueprintCall": [
							106
						],
						"IBlueprintManager": [
							138
						],
						"TokenOp": [
							97
						]
					},
					"id": 139,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 92,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"canonicalName": "TokenOp",
							"id": 97,
							"members": [
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "tokenId",
									"nameLocation": "90:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 97,
									"src": "82:15:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "82:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 96,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "108:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 97,
									"src": "100:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 95,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "100:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "TokenOp",
							"nameLocation": "71:7:2",
							"nodeType": "StructDefinition",
							"scope": 139,
							"src": "64:53:2",
							"visibility": "public"
						},
						{
							"canonicalName": "BlueprintCall",
							"id": 106,
							"members": [
								{
									"constant": false,
									"id": 99,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "151:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 106,
									"src": "143:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 98,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "143:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 101,
									"mutability": "mutable",
									"name": "blueprint",
									"nameLocation": "168:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 106,
									"src": "160:17:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 100,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "160:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 103,
									"mutability": "mutable",
									"name": "action",
									"nameLocation": "186:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 106,
									"src": "180:12:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 102,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "180:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 105,
									"mutability": "mutable",
									"name": "checksum",
									"nameLocation": "203:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 106,
									"src": "195:16:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 104,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "195:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "BlueprintCall",
							"nameLocation": "126:13:2",
							"nodeType": "StructDefinition",
							"scope": 139,
							"src": "119:95:2",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBlueprintManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "216:60:2",
								"text": "@title BlueprintManager's Interface\n @author Czar102"
							},
							"fullyImplemented": false,
							"id": 138,
							"linearizedBaseContracts": [
								138
							],
							"name": "IBlueprintManager",
							"nameLocation": "286:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "307:217:2",
										"text": "@notice executes a series of calls to Blueprints\n @param calls the set of calls to be made\n @dev must either be the party represented in each of these calls,\n      or an operator of the calls[i].sender"
									},
									"functionSelector": "62ba62e5",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cook",
									"nameLocation": "535:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "realizer",
												"nameLocation": "548:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "540:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "calls",
												"nameLocation": "583:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "558:30:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BlueprintCall_$106_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct BlueprintCall[]"
												},
												"typeName": {
													"baseType": {
														"id": 112,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 111,
															"name": "BlueprintCall",
															"nameLocations": [
																"558:13:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 106,
															"src": "558:13:2"
														},
														"referencedDeclaration": 106,
														"src": "558:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BlueprintCall_$106_storage_ptr",
															"typeString": "struct BlueprintCall"
														}
													},
													"id": 113,
													"nodeType": "ArrayTypeName",
													"src": "558:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BlueprintCall_$106_storage_$dyn_storage_ptr",
														"typeString": "struct BlueprintCall[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:50:2"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:0:2"
									},
									"scope": 138,
									"src": "526:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "602:331:2",
										"text": "@notice mints single type tokens according to the TokenOp\n @param to the address to mint to\n @param tokenId the Blueprint's token id to mint\n @param amount the token amount to mint\n @dev keep in mind that burning (inverting this action) is only possible\n       via cook invoked by the user or their operator"
									},
									"functionSelector": "156e29f6",
									"id": 127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "944:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "957:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "949:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "969:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "961:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "986:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "978:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:45:2"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1002:0:2"
									},
									"scope": 138,
									"src": "935:68:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "1006:311:2",
										"text": "@notice mints many types of tokens according to the `ops` array\n @param to the address to mint to\n @param ops the array of Blueprint's token ids and amounts to mint\n @dev keep in mind that burning (inverting this action) is only possible\n       via cook invoked by the user or their operator"
									},
									"functionSelector": "f3178dd1",
									"id": 137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1328:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "ops",
												"nameLocation": "1364:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1345:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct TokenOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 132,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 131,
															"name": "TokenOp",
															"nameLocations": [
																"1345:7:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 97,
															"src": "1345:7:2"
														},
														"referencedDeclaration": 97,
														"src": "1345:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOp_$97_storage_ptr",
															"typeString": "struct TokenOp"
														}
													},
													"id": 133,
													"nodeType": "ArrayTypeName",
													"src": "1345:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOp_$97_storage_$dyn_storage_ptr",
														"typeString": "struct TokenOp[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:36:2"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:0:2"
									},
									"scope": 138,
									"src": "1319:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 139,
							"src": "276:1104:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1342:2"
				},
				"id": 2
			}
		}
	}
}